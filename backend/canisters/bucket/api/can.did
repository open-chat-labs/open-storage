import "../../../libraries/types/can.did";

type UploadChunkArgs =
    record {
        file_id: FileId;
        hash: Hash;
        mime_type: text;
        accessors: vec AccessorId;
        chunk_index: nat32;
        chunk_size: nat32;
        total_size: nat64;
        bytes: blob;
    };

type UploadChunkResponse =
    variant {
        Success;
        AllowanceReached;
        FileAlreadyExists;
        FileTooBig;
        ChunkAlreadyExists;
        ChunkIndexTooHigh;
        ChunkSizeMismatch;
        Full;
        HashMismatch;
        UserNotFound;
    };

type DeleteFileArgs =
    record {
        file_id: FileId;
    };

type DeleteFileResponse =
    variant {
        Success;
        NotAuthorized;
        NotFound;
    };

service: {
    upload_chunk_v2: (UploadChunkArgs) -> (UploadChunkResponse);
    delete_file: (DeleteFileArgs) -> (DeleteFileResponse);
}